plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'jacoco'
	id 'java'
	id 'idea'
}

group = 'com.conpresp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	componentImplementation.extendsFrom testImplementation
	componentRuntime.extendsFrom testRuntime

	integrationImplementation.extendsFrom testImplementation
	integrationRuntime.extendsFrom testRuntime
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.h2database:h2'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'mysql:mysql-connector-java'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	integrationImplementation 'org.springframework.boot:spring-boot-starter-test'
	integrationImplementation 'org.testcontainers:mysql:1.16.2'
	integrationImplementation 'org.testcontainers:testcontainers:1.16.2'
	integrationImplementation 'org.testcontainers:junit-jupiter:1.16.0'
}

test {
	useJUnitPlatform()
}

sourceSets {
	component {
		java {
			srcDir "$projectDir/src/testComponent/java"
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
		}
	}

	integration {
		java {
			srcDir "$projectDir/src/testIntegration/java"
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
		}
	}
}

idea {
	module {
		testSourceDirs += project.sourceSets.component.java.srcDirs
		testSourceDirs += project.sourceSets.component.resources.srcDirs

		testSourceDirs += project.sourceSets.integration.java.srcDirs
		testSourceDirs += project.sourceSets.integration.resources.srcDirs
	}
}

task component(type: Test) {
	testClassesDirs = sourceSets.component.output.classesDirs
	classpath = sourceSets.component.runtimeClasspath
	useJUnitPlatform()
}

task integration(type: Test) {
	testClassesDirs = sourceSets.integration.output.classesDirs
	classpath = sourceSets.integration.runtimeClasspath
	useJUnitPlatform()
}

task allTests() {
	dependsOn test
	dependsOn component
	dependsOn integration

	finalizedBy(jacocoTestReport)
}
